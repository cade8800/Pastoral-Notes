<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graze.pastoral.notes.api.dao.DiaryMapper">

    <resultMap id="getDiariesMap" type="com.graze.pastoral.notes.domain.dto.diary.DiaryOutput">
        <result property="id" column="id" javaType="java.util.UUID" jdbcType="VARCHAR"
                typeHandler="com.graze.pastoral.notes.api.handler.UuidTypeHandler"/>
        <result column="date" property="date"/>
        <result column="location" property="location"/>
        <result column="weather" property="weather"/>
        <result column="summary" property="summary"/>
        <result column="cover_url" property="coverUrl"/>
        <result column="content" property="content"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <select id="getDiaries" resultMap="getDiariesMap">

        select * from pn_diary n
        where n.is_deleted=false
        and n.create_user_id=#{currentUserId}

        <if test="keyword != null and keyword != ''">
            <bind name="summary" value="'%' + keyword + '%'"/>
            and n.summary like #{summary}
        </if>
        <if test="startDate != null and endDate != null">
            and n.date <![CDATA[ >= ]]> #{startDate} and n.date <![CDATA[ <= ]]> #{endDate}
        </if>

        <choose>
            <when test="labelId != null and labelId != ''">
                and n.id in (select l.diary_id from pn_diary_label l where l.label_id=#{labelId} and l.is_deleted=false)
            </when>
            <when test="hasNoLabels==true">
                and n.id not in (select l.diary_id from pn_diary_label l where l.is_deleted=false)
            </when>
        </choose>

    </select>

    <resultMap id="getDiaryDetailMap" type="com.graze.pastoral.notes.domain.dto.diary.DiaryDetailOutput"
               extends="getDiariesMap">
    </resultMap>
    <select id="getDiaryDetail" resultMap="getDiaryDetailMap">
        select
            n.id,
            n.date,
            n.location,
            n.weather,
            n.summary,
            n.cover_url,
            n.content,
            n.create_time,
            n.update_time
        from pn_diary n
        where
            n.id=#{diaryId}
            and n.is_deleted=false
            and n.create_user_id=#{currentUserId}
    </select>

    <update id="updateDiary">
        update pn_diary n
        set
        n.date=#{date},
        n.location=#{location},
        n.weather=#{weather},
        n.summary=#{summary},
        n.cover_url=#{coverUrl},
        n.content=#{content},
        n.update_user_id=#{currentUserId},
        n.update_time=#{updateTime}
        where n.id=#{diaryId}
        and n.create_user_id=#{currentUserId}
    </update>

    <update id="deleteDiaryById">
        UPDATE pn_diary n
        SET n.is_deleted=true,
        n.update_user_id=#{currentUserId},
        n.update_time=#{updateTime}
        WHERE n.id=#{diaryId}
        AND n.create_user_id=#{currentUserId}
    </update>

</mapper>